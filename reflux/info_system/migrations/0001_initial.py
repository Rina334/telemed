# Generated by Django 5.2.1 on 2025-05-14 02:03

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, max_length=100)),
                ('last_name', models.CharField(blank=True, max_length=100)),
                ('specialization', models.CharField(blank=True, max_length=100)),
                ('phone', models.CharField(blank=True, max_length=15)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('birth_date', models.DateField()),
                ('phone', models.CharField(blank=True, max_length=15)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('left_kidney_grade', models.IntegerField(choices=[(0, 'Нет рефлюкса'), (1, 'I степень'), (2, 'II степень'), (3, 'III степень'), (4, 'IV степень'), (5, 'V степень')], default=0)),
                ('right_kidney_grade', models.IntegerField(choices=[(0, 'Нет рефлюкса'), (1, 'I степень'), (2, 'II степень'), (3, 'III степень'), (4, 'IV степень'), (5, 'V степень')], default=0)),
                ('operation_type', models.CharField(choices=[('URETERAL_REIMPLANT', 'Уретероцистоанастомоз'), ('DEFLUX_INJECTION', 'Инъекция Дефлюкса'), ('OTHER', 'Другое'), ('NONE', 'Не выполнялась')], default='NONE', max_length=50)),
                ('operation_date', models.DateField(blank=True, null=True)),
                ('operation_notes', models.TextField(blank=True)),
                ('pyelonephritis_history', models.BooleanField(default=False)),
                ('last_pyelonephritis_date', models.DateField(blank=True, null=True)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='patient_photos/')),
                ('notes', models.TextField(blank=True)),
                ('doctor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='info_system.doctor')),
            ],
        ),
        migrations.CreateModel(
            name='MedicalExamination',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('examination_date', models.DateField(default=django.utils.timezone.now)),
                ('left_kidney_grade', models.IntegerField(choices=[(0, 'Нет рефлюкса'), (1, 'I степень'), (2, 'II степень'), (3, 'III степень'), (4, 'IV степень'), (5, 'V степень')])),
                ('right_kidney_grade', models.IntegerField(choices=[(0, 'Нет рефлюкса'), (1, 'I степень'), (2, 'II степень'), (3, 'III степень'), (4, 'IV степень'), (5, 'V степень')])),
                ('has_pyelonephritis', models.BooleanField(default=False)),
                ('creatinine_level', models.FloatField(blank=True, null=True)),
                ('urine_analysis', models.TextField(blank=True)),
                ('usg_results', models.TextField(blank=True)),
                ('treatment', models.TextField(blank=True)),
                ('recommendations', models.TextField(blank=True)),
                ('doctor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='info_system.doctor')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='info_system.patient')),
            ],
        ),
    ]
